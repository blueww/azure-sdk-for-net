// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Storage.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for HTTPMethod.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum HTTPMethod
    {
        [EnumMember(Value = "DELETE")]
        DELETE,
        [EnumMember(Value = "GET")]
        GET,
        [EnumMember(Value = "HEAD")]
        HEAD,
        [EnumMember(Value = "MERGE")]
        MERGE,
        [EnumMember(Value = "POST")]
        POST,
        [EnumMember(Value = "OPTIONS")]
        OPTIONS,
        [EnumMember(Value = "PUT")]
        PUT
    }
    internal static class HTTPMethodEnumExtension
    {
        internal static string ToSerializedValue(this HTTPMethod? value)
        {
            return value == null ? null : ((HTTPMethod)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this HTTPMethod value)
        {
            switch( value )
            {
                case HTTPMethod.DELETE:
                    return "DELETE";
                case HTTPMethod.GET:
                    return "GET";
                case HTTPMethod.HEAD:
                    return "HEAD";
                case HTTPMethod.MERGE:
                    return "MERGE";
                case HTTPMethod.POST:
                    return "POST";
                case HTTPMethod.OPTIONS:
                    return "OPTIONS";
                case HTTPMethod.PUT:
                    return "PUT";
            }
            return null;
        }

        internal static HTTPMethod? ParseHTTPMethod(this string value)
        {
            switch( value )
            {
                case "DELETE":
                    return HTTPMethod.DELETE;
                case "GET":
                    return HTTPMethod.GET;
                case "HEAD":
                    return HTTPMethod.HEAD;
                case "MERGE":
                    return HTTPMethod.MERGE;
                case "POST":
                    return HTTPMethod.POST;
                case "OPTIONS":
                    return HTTPMethod.OPTIONS;
                case "PUT":
                    return HTTPMethod.PUT;
            }
            return null;
        }
    }
}
