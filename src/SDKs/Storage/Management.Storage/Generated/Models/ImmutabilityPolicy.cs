// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Storage.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// TODO
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class ImmutabilityPolicy : BlobResource
    {
        /// <summary>
        /// Initializes a new instance of the ImmutabilityPolicy class.
        /// </summary>
        public ImmutabilityPolicy()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ImmutabilityPolicy class.
        /// </summary>
        /// <param name="immutabilityPeriodSinceCreationInDays">TODO</param>
        /// <param name="id">Resource Id</param>
        /// <param name="name">Resource name</param>
        /// <param name="type">Resource type</param>
        /// <param name="state">TODO. Possible values include: 'Locked',
        /// 'Unlocked'</param>
        public ImmutabilityPolicy(int immutabilityPeriodSinceCreationInDays, string id = default(string), string name = default(string), string type = default(string), ImmutabilityPolicyState? state = default(ImmutabilityPolicyState?))
            : base(id, name, type)
        {
            ImmutabilityPeriodSinceCreationInDays = immutabilityPeriodSinceCreationInDays;
            State = state;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets TODO
        /// </summary>
        [JsonProperty(PropertyName = "properties.ImmutabilityPeriodSinceCreationInDays")]
        public int ImmutabilityPeriodSinceCreationInDays { get; set; }

        /// <summary>
        /// Gets TODO. Possible values include: 'Locked', 'Unlocked'
        /// </summary>
        [JsonProperty(PropertyName = "properties.State")]
        public ImmutabilityPolicyState? State { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
